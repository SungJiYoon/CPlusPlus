#include <iostream>

using namespace std;

// 디버그 -> 창 -> 디스어셈블리 들어가면 내부적으로 기계코드가 만들어지는데 그 내용 볼 수 있음

// C언어
// 포인터형
// 정수형, 실수형, 문자형

// 참조형


// 포인터형 변수와 참조형 변수의 차이점
// 참조형 변수는 한 번 초기화될 때 들어온 주소값을 변경할 수 없다.
// 포인터형 변수는 변경할 수 있다.(다른 주소값도 넣을 수 있다)
int main() {

    // 참조형변수
    // 참조형변수 내부적으로 작동은 포인터형변수와 동일합니다.
    // 하지만 참조형변수가 만들어질때 전달된 변수의 주소값을 다른 변수의 
    // 주소값으로 변경할 수 없습니다.
    // 그래서 전달된 변수의 다른 이름(별칭)이 만들어졌다고 합니다.
    int a = 20;
    int b = 30;
    int& refa = a;   // 참조형 변수 refa를 만듦
                // 참조형 변수는 변수를 만듦과 동시에 초기화를 해야 합니다.

    refa = 100;

    cout << "a = " << a << endl;

    a = 2000;

    cout << "refa = " << refa << endl;


    // 포인터 형변수
    // 포인터형변수는 다른 변수의 주소값을 대입할 수 있습니다.
    // 참조형변수와 내부적인 코드 같지만 작동 방법은 틀립니다.
    int* pa;
    pa = &a;

    *pa = 30;

    cout << "a = " << a << endl;

    pa = &b;

    *pa = 100;
    cout << "b = " << b << endl;

    // 상수형 변수


    // 상수는 값을 이야기 합니다.
    100;
    200;

    int sum = 100 + 200;

    // 변수를 상수성을 띄게 할 수 있습니다.
    // 변수를 만들때 const 키워드를 붙이면 변수가 상수성을 가지게 됩니다.
    // 상수성을 가진다는 의미는 변수의 값을 변경할 수 없다는 의미입니다.
    // 상수형 변수도 변수를 만듦과 동시에 초기화를 해줘야 합니다.
    const int MAX = 200;





    return 0;
}